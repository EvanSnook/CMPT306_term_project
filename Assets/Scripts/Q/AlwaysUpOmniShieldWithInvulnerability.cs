using UnityEngine;
using System.Collections;

public class AlwaysUpOmniShieldWithInvulnerability : MonoBehaviour {

    public GameObject omniShieldPrefab;
    public float despawnTime;
    public float cooldownDuration;

    private GameObject omniShield;
    private SpriteRenderer render;
    private bool canInvuln;

    // Use this for initialization
    void Start()
    {
        canInvuln = true;

        //get the renderer for the object
        render = GetComponent<SpriteRenderer>();

        //creates players initial omnishield
        omniShield = Instantiate(omniShieldPrefab, transform.position, transform.rotation) as GameObject;

        //parent the shield to the player so that it follows the transform
        omniShield.transform.parent = gameObject.transform;

    }

    // Update is called once per frame
    void Update()
    {
        //if shields health is 0 destroy it
        if (omniShield != null)
        {
            if (omniShield.GetComponent<Health>().HealthPoints <= 0)
            {
                DestroyShield();
            }
        }
    }

    void UseShield()
    {
        if (canInvuln)
        {
            canInvuln = false;

            //change character color
            render.color = new Color(1f, 0f, 0.804f, 1f);

            //destroy the shield because player is not invulnerable
            Destroy(omniShield);

            //start cooldowns
            StartCoroutine("RefreshInvulnCooldown");
            StartCoroutine("RefreshInvuln");
        }
    }

    //turn off invuln and reinstantiate your shield
    IEnumerator RefreshInvulnCooldown()
    {
        yield return new WaitForSeconds(despawnTime);
        omniShield = Instantiate(omniShieldPrefab, transform.position, transform.rotation) as GameObject;
        omniShield.transform.parent = gameObject.transform;
        render.color = new Color(0.56f, 0f, 0.56f, 1f);

    }
    
    //refreshes invulnerability cooldown
    IEnumerator RefreshInvuln()
    {
        yield return new WaitForSeconds(cooldownDuration);
        canInvuln = true;
    }

    //the cooldown for the shield
    IEnumerator shieldCooldown()
    {
        yield return new WaitForSeconds(despawnTime);
        createShield();
    }

    //create shield when cooldown is over
    void createShield()
    {
        omniShield = Instantiate(omniShieldPrefab, transform.position, transform.rotation) as GameObject;
        omniShield.transform.parent = gameObject.transform;
    }

    //destroy shield and put it on cooldown
    void DestroyShield()
    {
        Destroy(omniShield);
        StartCoroutine("shieldCooldown");


    }
}
